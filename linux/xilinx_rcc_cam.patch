diff --git a/drivers/media/platform/xilinx/Kconfig b/drivers/media/platform/xilinx/Kconfig
index a4bc592fdb3c..d13aa1e94b1d 100644
--- a/drivers/media/platform/xilinx/Kconfig
+++ b/drivers/media/platform/xilinx/Kconfig
@@ -8,6 +8,12 @@ config VIDEO_XILINX
 
 if VIDEO_XILINX
 
+config VIDEO_RCC_CAM
+       tristate "RC Car Control Camera driver"
+       depends on VIDEO_XILINX
+       ---help---
+           Driver for RC Car Control project (home project)
+
 config VIDEO_XILINX_CFA
 	tristate "Xilinx Video Color Filter Array"
 	depends on VIDEO_XILINX
diff --git a/drivers/media/platform/xilinx/Makefile b/drivers/media/platform/xilinx/Makefile
index a28dceabe906..6dc1c862180b 100644
--- a/drivers/media/platform/xilinx/Makefile
+++ b/drivers/media/platform/xilinx/Makefile
@@ -1,5 +1,6 @@
 xilinx-video-objs += xilinx-dma.o xilinx-vip.o xilinx-vipp.o
 
+obj-$(CONFIG_VIDEO_RCC_CAM) += xilinx-rcc-cam.o
 obj-$(CONFIG_VIDEO_XILINX) += xilinx-video.o
 obj-$(CONFIG_VIDEO_XILINX_CFA) += xilinx-cfa.o
 obj-$(CONFIG_VIDEO_XILINX_CRESAMPLE) += xilinx-cresample.o
diff --git a/drivers/media/platform/xilinx/xilinx-rcc-cam.c b/drivers/media/platform/xilinx/xilinx-rcc-cam.c
new file mode 100644
index 000000000000..26e12d5aee19
--- /dev/null
+++ b/drivers/media/platform/xilinx/xilinx-rcc-cam.c
@@ -0,0 +1,91 @@
+/*
+ * RC Car Control Video driver
+ *
+ * Author: Jure Menart (juremenart@gmail.com)
+ */
+#include <linux/delay.h>
+#include <linux/dmaengine.h>
+#include <linux/init.h>
+#include <linux/kthread.h>
+#include <linux/module.h>
+#include <linux/of_dma.h>
+#include <linux/platform_device.h>
+#include <linux/random.h>
+#include <linux/slab.h>
+#include <linux/wait.h>
+#include <linux/dma/xilinx_dma.h>
+
+static int xrcc_cam_add_channels(struct dma_chan *rx_chan)
+{
+
+    return 0;
+}
+
+static int xrcc_cam_probe(struct platform_device *pdev)
+{
+    struct dma_chan *rx_chan;
+    int err;
+
+    rx_chan = dma_request_slave_channel(&pdev->dev, "axivdma0");
+    if (IS_ERR(rx_chan)) {
+        err = PTR_ERR(rx_chan);
+        pr_err("xilinx_dmatest: No Rx channel\n");
+        return err;
+    }
+
+    err = xrcc_cam_add_channels(rx_chan);
+    if (err) {
+        pr_err("xilinx_dmatest: Unable to add channels\n");
+        goto free_rx;
+    }
+
+    dev_info(&pdev->dev, "RCC Camera Driver Probed");
+
+    return 0;
+
+free_rx:
+    dma_release_channel(rx_chan);
+
+    return err;
+}
+
+static int xrcc_cam_remove(struct platform_device *pdev)
+{
+    struct dma_chan *chan;
+
+    //todo: Release channel
+
+    return 0;
+}
+
+static const struct of_device_id xrcc_cam_of_ids[] = {
+    { .compatible = "xlnx,rcc-cam-1.0" },
+    {}
+};
+
+static struct platform_driver xrcc_cam_driver = {
+    .driver = {
+        .name = "xrcc_cam",
+        .owner = THIS_MODULE,
+        .of_match_table = xrcc_cam_of_ids,
+    },
+    .probe = xrcc_cam_probe,
+    .remove = xrcc_cam_remove,
+};
+
+static int __init xrcc_cam_init(void)
+{
+    return platform_driver_register(&xrcc_cam_driver);
+
+}
+late_initcall(xrcc_cam_init);
+
+static void __exit xrcc_cam_exit(void)
+{
+    platform_driver_unregister(&xrcc_cam_driver);
+}
+module_exit(xrcc_cam_exit)
+
+MODULE_AUTHOR("Jure Menart (juremenart@gmail.com)");
+MODULE_DESCRIPTION("RC Car Control Camera Driver");
+MODULE_LICENSE("GPL v2");
